server  {

        listen 80;
        listen 443 ssl;
	http2 on;
        server_name rminfo.stephenc.online;

        ssl_certificate /etc/nginx/ssl/stephenc.online/stephenc.online.cer;
        ssl_certificate_key /etc/nginx/ssl/stephenc.online/stephenc.online.key;



        root /var/www/rminfo;
        index index.php index.html index.htm;

        #client_max_body_size 140m;

    location / {

        limit_req zone=thirty_per_sec burst=40 nodelay;


        # Apply the connection limit
        limit_conn conn_zone 10;

        try_files $uri $uri/ /index.php?$query_string;

    }

    location = /wp-config.php {
        deny all;

    }
    location ^~ /wp-login.php {
        include /etc/nginx/conf.d/ips/allowed_ips.conf;
        deny all;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass rminfo_app:9000;
    }


    location /wp-json{
        try_files $uri $uri/ /index.php?$query_string;        
    }

    location /wp-includes{
        try_files $uri $uri/ /index.php?$query_string;        
    }


    location ^~ /wp-admin {


        # Deny access to everything in the wp-admin directory by default
	include /etc/nginx/conf.d/ips/allowed_ips.conf;
        deny all;

        # Include necessary parameters for FastCGI processing
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass rminfo_app:9000;

        # Allow access to specific file types for logged-in users (adjust IP as necessary)
        location ~* \.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm|webp|zip|swf)$ {
	    
	    include /etc/nginx/conf.d/ips/allowed_ips.conf;
            deny all;
            root /var/www/stephenc; # Adjust this path as necessary
            try_files $uri $uri/ =404;
        }



    }

    location ^~ /wp-admin/admin-ajax.php {
        allow all;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass rminfo_app:9000;

    }

    # Deny direct access to wp-content/plugins PHP files
    location ~* ^/wp-content/plugins/.*\.php$ {
        deny all;
    }
        # Deny direct access to wp-content/themes PHP files
    location ~* ^/wp-content/themes/.*\.php$ {
        deny all;
    }
    # Deny access to PHP files in uploads directory
    location ~* ^/wp-content/uploads/.*\.php$ {
        deny all;
    }
    # Deny direct access to wp-includes PHP files
    location ~* ^/wp-includes/.*\.php$ {
        deny all;
    }

    # Deny access to xmlrpc.php
    location = /xmlrpc.php {
        deny all;
    }

    #  Deny access to .git directory
    location ~ /\.git {
        deny all;
    }

    # Protect sensitive files like .env
    location ~ /\.env {
        deny all;
    }
    # Deny access to .htaccess
    location ~ /\.ht {
        deny all;
    }
    # Protect .user.ini
    location ~ /\.user\.ini {
        deny all;
    }
    # Prevent access to backup files
    location ~* \.(bak|orig|save|swp|temp|~)$ {
        deny all;
    }
        # You may want to add separate location blocks for serving static files (like images, CSS, and JS)
        # directly from disk without involving FastCGI, which can improve performance.
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header ETag $upstream_http_etag;

        }

        # Define when to bypass cache and when not to cache
        set $skip_cache 0;

        # Bypass cache for POST requests
        if ($request_method = POST) {
            set $skip_cache 1;
        }

        # Bypass cache if there's a query string
        if ($query_string != "") {
            set $skip_cache 1;
        }

        # Bypass cache for admin and login pages
        if ($request_uri ~* "/wp-admin/|/wp-login.php") {
            set $skip_cache 1;
        }

        # Bypass cache for AJAX requests
        if ($request_uri ~* "/wp-admin/admin-ajax.php") {
            set $skip_cache 1;
        }

        # Bypass cache for REST API requests
        if ($request_uri ~* "/wp-json/") {
            set $skip_cache 1;
        }

        # Bypass cache for specific cookies
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in|woocommerce_cart_hash|woocommerce_items_in_cart|wp_woocommerce_session") {
            set $skip_cache 1;
        }
        location ~ \.php$ {
            try_files $uri =404;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_index index.php;
            fastcgi_pass rminfo_app:9000;

            # add cache mechanism  
            fastcgi_cache_key "$scheme$request_method$host$request_uri$is_args$args";
            fastcgi_cache RMINFO;
            fastcgi_cache_valid 200 30d;
            fastcgi_cache_use_stale error timeout invalid_header updating;
            add_header X-Fastcgi-Cache $upstream_cache_status;

            # Use the no_cache directive based on the $skip_cache variable
            fastcgi_no_cache $skip_cache;
            fastcgi_cache_bypass $skip_cache;
            
            # Ignore specific headers from upstream (PHP-FPM)
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

        }


}
